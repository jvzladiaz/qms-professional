version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: qms_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: qms_automotive
      POSTGRES_USER: qms_user
      POSTGRES_PASSWORD: qms_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - qms_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qms_user -d qms_automotive"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: qms_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass qms_redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - qms_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # pgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: qms_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@qms-automotive.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - qms_network
    depends_on:
      - postgres
    profiles:
      - dev

  # Backend API (for production deployment)
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: qms_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://qms_user:qms_password@postgres:5432/qms_automotive
      REDIS_URL: redis://:qms_redis_password@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3001:3001"
    volumes:
      - ./packages/backend/uploads:/app/uploads
    networks:
      - qms_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - production

  # Frontend (for production deployment)
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: qms_frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://localhost:3001/api
    ports:
      - "5173:5173"
    networks:
      - qms_network
    depends_on:
      - backend
    profiles:
      - production

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: qms_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - qms_network
    depends_on:
      - backend
      - frontend
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  qms_network:
    driver: bridge